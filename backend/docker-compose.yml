services:
  postgres-master:
    image: postgres:17-alpine
    container_name: postgres-master
    ports:
      - ${DOCKER_DB_OUTBOUND_PORT}:5432
    environment:
      - POSTGRES_DB=${DOCKER_DB_DATABASE}
      - POSTGRES_USER=${DOCKER_DB_USERNAME}
      - POSTGRES_PASSWORD=${DOCKER_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DOCKER_DB_USERNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - master-database:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - ${RABBIT_MSG_PORT}:5672
      - ${RABBIT_MNGT_PORT}:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      start_period: 10s
      retries: 3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    logging:
        driver: json-file  # Use the json-file logging driver (default)
        options:
            max-size: 10m
            max-file: 3

  mongo:
    image: mongo:8
    command: mongod --quiet --logpath /dev/null 
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: "mongosh --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"
      interval: 5s
      timeout: 15s
      retries: 3
    volumes:
      - cache-database:/var/lib/mongodb/data

  be-base:
    build:
      context: .
      dockerfile: Dockerfile-Base
    image: be-base-image:latest
    command: ["true"]

  be-queries:
    build:
      context: .
      dockerfile: ./src/Queries/Dockerfile
    ports:
      - 1235:8080
    environment:
      Database:Paelagus_RO: "User ID=${DOCKER_DB_USERNAME};Password=${DOCKER_DB_PASSWORD};Host=postgres-master;Port=5432;Database=${DOCKER_DB_DATABASE};"
      Datastore:Cache: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017
      Messaging:Lepus: amqp://guest:guest@rabbitmq:5672
      ASPNETCORE_ENVIRONMENT: "Development"
      Jwt:iss: ${jwt_iss}
      Jwt:aud: ${jwt_aud}
      Jwt:key: ${jwt_key}
    links:
      - postgres-master
      - rabbitmq
      - mongo
    depends_on:
      postgres-master:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
      be-base:
        condition: service_completed_successfully

  be-commands:
    build:
      context: .
      dockerfile: ./src/Commands/Dockerfile
    ports:
      - "1234:8080"
    environment:
      Database:Paelagus_RO: "User ID=${DOCKER_DB_USERNAME};Password=${DOCKER_DB_PASSWORD};Host=postgres-master;Port=5432;Database=${DOCKER_DB_DATABASE};"
      Messaging:Lepus: amqp://guest:guest@rabbitmq:5672
      ASPNETCORE_ENVIRONMENT: Development
      Jwt:iss: ${jwt_iss}
      Jwt:aud: ${jwt_aud}
      Jwt:key: ${jwt_key}
      AWS:PreprocessBucket: ${AWS_PREPROCESS_BUCKET_NAME}
      AWS:PostprocessBucket: ${AWS_POSTPROCESS_BUCKET_NAME}
      AWS:SQSUrl: ${AWS_SQS_URL}
    links:
      - postgres-master
      - rabbitmq
    depends_on:
      postgres-master:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      be-base:
        condition: service_completed_successfully
    volumes:
      - $HOME/.aws/credentials:/root/.aws/credentials:ro

volumes:
  master-database:
  rabbitmq_data:
  cache-database:
